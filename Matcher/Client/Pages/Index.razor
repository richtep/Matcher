@page "/"
@using Matcher.Shared;
@using Matcher.Client.Services;
@using EntitySystem.Client.Services;

@inject GameService _gameService;
@inject GroupService _groupService;
@inject ItemService _itemService;
@inject UserService _userService;
@inject IRedirectService _redirectService;
@inject HttpClient Http;
@inject IAlertService _alertService;

<PageTitle>Game list</PageTitle>

<h1>Game list</h1>


 @if(games != null )
 {
    <table>
        <tr>
            <th>Name</th>
            <th>Author</th>
        </tr>

         @foreach(var game in games) 
            {
                <tr @onclick="() => StartGame(game)">
                    <td>@game.Name</td>
                    <td>@game.User.Nick</td>
                </tr>
            }
    </table>
 }

<button @onclick="@ImportGameAsync">Import new game</button>

@code
{
    private const string filePath = @"c:\matcher\";

    private const string fileName = "gameImport.txt";

    public static Game CurrentGame;

    private List<Game> games;

    private List<string> lines;


    protected override async Task OnParametersSetAsync()
    {
        games = await _gameService.ListAsync(); 
    }

    private async Task StartGame(Game game) 
    {
        CurrentGame = game;
        await _redirectService.RedirectToAsync("/current-game");
    }

    private async Task ImportGameAsync()
    {
        try
        {
            var content = await Http.GetStringAsync(fileName);

            lines = (content.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)).ToList();

            var userCreated = new User { Nick = "User1", Email = "a@b.cz", Password = "psw" };
            userCreated = await _userService.PutAsync(userCreated);

            var gameCreated = new Game { Name = fileName, User = userCreated };
            gameCreated = await _gameService.PutAsync(gameCreated);

            foreach (var line in lines)
            {
                var items = line.Split(",");

                var groupCreated = new Group { Game = gameCreated };
                groupCreated = await _groupService.PutAsync(groupCreated);

                foreach (var item in items)
                {
                    var itemCreated = new Item { Value = item, Group = groupCreated };
                    itemCreated = await _itemService.PutAsync(itemCreated);
                }
            }
        }
        catch (Exception)
        {
            throw;
        }
               
        _alertService.Add(AlertType.Success, "Game was successfully imported.");
    }
}