@page "/import-game"
@using EntitySystem.Client.Services
@using Matcher.Shared;
@using Matcher.Client.Services;
@using Matcher.Shared.Domain
@using Matcher.Shared.Models
@using Microsoft.AspNetCore.Components

@inject IAlertService _alertService;
@inject GameService _gameService;
@inject GroupService _groupService;
@inject ItemService _itemService;
@inject UserService _userService;

<PageTitle>Import game</PageTitle>

<h1>Import game file</h1>


<InputFile OnChange="@LoadFiles"/>

<EditForm autocomplete="on" Model="@SignUpModel"
                                            OnValidSubmit="@LoadFiles()">
                                            <DataAnnotationsValidator />
                                            <div class="mt-2">
                                                <ValidationSummary />
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label" for="card-name">First Name</label>
                                                <input class="form-control" type="text" autocomplete="on" id="card-name"
                                                    @bind-value="SignUpModel.NickName" />
                                            </div>
                                            

                                            <div class="mb-3">
                                                <label class="form-label" for="card-email">Email address</label>
                                                <input class="form-control" type="email" autocomplete="on"
                                                    id="card-email" @bind-value="SignUpModel.Email" />
                                            </div>
                                            <div class="row gx-2">
                                                <div class="mb-3 col-sm-6">
                                                    <label class="form-label" for="card-password">Password</label>
                                                    <input class="form-control" type="password" autocomplete="on"
                                                        id="card-password"
                                                        @bind-value="FreelanceSignUpModel.Password" />
                                                </div>
                                                <div class="mb-3 col-sm-6">
                                                    <label class="form-label" for="card-confirm-password">Confirm
                                                        Password</label>
                                                    <input class="form-control" type="password" autocomplete="on"
                                                        id="card-confirm-password"
                                                        @bind-value="FreelanceSignUpModel.Confirm" />
                                                </div>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox"
                                                    id="card-register-checkbox" @bind="ConsentIsChecked" />
                                                <label class="form-label" for="card-register-checkbox">I accept the <a
                                                        href="#!">terms </a>and <a href="#!">privacy policy</a></label>
                                            </div>
                                            <div class="mb-3">
                                                <button class="btn btn-primary d-block w-100 mt-3" type="submit"
                                                    name="submit" disabled="@(!ConsentIsChecked)">Register</button>
                                            </div>
                                        </EditForm>


@code 
{
    private async Task LoadFiles(InputFileChangeEventArgs e) 
    {
        
        try
            {
                var content = await new StreamReader(e.File.OpenReadStream()).ReadToEndAsync();
            
                var lines = (content.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)).ToList();

                var userCreated = new User { Nick = "User1", Email = "a@b.cz", Password = "psw" };
                userCreated = await _userService.PutAsync(userCreated);

                var gameCreated = new Game { Name = e.File.Name, User = userCreated };
                gameCreated = await _gameService.PutAsync(gameCreated);

                foreach (var line in lines)
                {
                    var items = line.Split(",");

                    var groupCreated = new Group { Game = gameCreated };
                    groupCreated = await _groupService.PutAsync(groupCreated);

                    foreach (var item in items)
                    {
                        var itemCreated = new Item { Value = item, Group = groupCreated };
                        itemCreated = await _itemService.PutAsync(itemCreated);
                    }
                }
            }
            catch (Exception)
            {
                throw;
            }

        _alertService.Add(AlertType.Success, "Game was successfully imported.");
    }
} 